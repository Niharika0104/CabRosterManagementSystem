@inject LoginService loginservice
@inject CabService cabservice
<div class="d-flex gap-4 flex-wrap p-2">

@if (loginservice?.employee?.Role != "Admin")
    {
        <CardComponent Title="Rosters" CardId="1" ImgUrl="https://cdn2.iconfinder.com/data/icons/flat-productivity-at-work/256/To-Do_List-1024.png" Count="@approved"
                       BackgroundColor="#3385ff"
OnCardClick="currentcard" />
        <CardComponent Title
        ="Rejected Rosters" CardId
        ="2" Count
        ="@rejected" OnCardClick
        ="currentcard"
                       ImgUrl="https://static.vecteezy.com/system/resources/previews/012/916/689/original/red-cross-mark-buttons-in-3d-realistic-style-crossmark-signs-illustration-png.png"
                       BackgroundColor="#ff4d4d" />
        <CardComponent Title="Current Roster" CardId="5" Count="1" OnCardClick="currentcard" ImgUrl="https://cdn-icons-png.flaticon.com/512/5978/5978235.png" BackgroundColor="yellow"/>
    }

   @*  @if (loginservice?.employee?.Role == "Manager")
    {
        <CardComponent Title="All Requests" CardId="3" Count="4" OnCardClick="currentcard" ImgUrl="https://cdn2.iconfinder.com/data/icons/flat-productivity-at-work/256/To-Do_List-1024.png" BackgroundColor="#3385ff" />
        <CardComponent Title="Pending Requests" CardId="4" Count="4" OnCardClick="currentcard" ImgUrl="https://th.bing.com/th/id/OIP.XDNxjkYXuzHz6VMxKUq42gHaHw?rs=1&pid=ImgDetMain" BackgroundColor="yellow"/>
    } *@
    @if (loginservice?.employee?.Role == "Admin")
    {
        <CardComponent Title="All Cabs" CardId="6" Count="@cabs" OnCardClick="currentcard"
                       ImgUrl="https://cdn2.iconfinder.com/data/icons/circle-icons-1/64/taxi-1024.png"
                       BackgroundColor="#3385ff" />
        <CardComponent Title="All Drivers" CardId="7" Count="@drivers" OnCardClick="currentcard"
                       ImgUrl="https://icon-library.com/images/drivers-icon/drivers-icon-10.jpg"
                       BackgroundColor="#3385ff" />
        <CardComponent Title="Pending Bookings" CardId="8" Count="2" OnCardClick="currentcard"
                       ImgUrl="https://th.bing.com/th/id/OIP.XDNxjkYXuzHz6VMxKUq42gHaHw?rs=1&pid=ImgDetMain" BackgroundColor="yellow" />
    }
</div>

@code {
    public int CurrentCard { get; set; }
    public int approved { get; set; }
    public int rejected { get; set; }
    public int drivers { get; set; }
    public int cabs { get; set; }

    [Parameter] public EventCallback UpdateState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        var response = await cabservice.GetApprovedRosters(loginservice?.employee?.EmployeeId);
        approved = response.Count;
        response = await cabservice.GetRejectedRosters(loginservice?.employee?.EmployeeId);
        rejected = response.Count;
        var driver  = await cabservice.getDriversData();
        drivers = driver.Count;
        var cab = await cabservice.getCabsData();
        cabs = cab.Count;

        StateHasChanged();
    }
    public async Task currentcard(int id)
    {
        CurrentCard = id;
        
        await UpdateState.InvokeAsync();
    }
   
}
